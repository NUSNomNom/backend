name: Rust CI
on:
  pull_request:
    branches:
      - main
      - dev
    paths:
      - '**/*.rs'
      - 'Cargo.toml'
      - 'Cargo.lock'

jobs:
  rust-ci:
    name: Rust Format, Lint, and Test (Stable)
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: test_password
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      DATABASE_URL: mysql://test_user:test_password@localhost:3306/test_db

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          components: rustfmt, clippy
          override: true

      - name: Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h localhost -P 3306 -u test_user -ptest_password --silent; do
            echo 'Waiting for MySQL...'
            sleep 2
          done
          echo 'MySQL is ready!'
      
      - name: Cache Cargo registry
        uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build project
        run: cargo build --quiet --locked

      - name: Check formatting
        run: cargo fmt --quiet --check

      - name: Check linting
        run: cargo clippy --quiet --locked --all-targets --all-features -- -D warnings
      
      - name: Run tests
        run: cargo test --quiet --locked --all-targets --all-features
name: Rust CI
on:
  pull_request:
    branches:
      - main
      - dev
    paths:
      - '**/*.rs'
      - 'Cargo.toml'
      - 'Cargo.lock'

jobs:
  rust-ci:
    name: Rust Format, Lint, and Test (Stable)
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: mysql://root:root@localhost:3306/test_db

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          components: rustfmt, clippy
          override: true

      - name: Start MySQL service
        run: |
          sudo systemctl start mysql.service
          # Wait for MySQL to be ready
          sudo mysqladmin ping --wait=30
          # Create test database
          sudo mysql --user=root --password=root -e "CREATE DATABASE test_db;"

      - name: Run database migrations
        run: |
          # Run migrations in chronological order based on filename timestamps
          for migration in $(ls migrations/*.sql | sort); do
            echo "Running migration: $migration"
            sudo mysql --user=root --password=root test_db < "$migration"
          done
      
      - name: Cache Cargo registry
        uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build project
        run: cargo build --quiet --locked

      - name: Check formatting
        run: cargo fmt --quiet --check

      - name: Check linting
        run: cargo clippy --quiet --locked --all-targets --all-features -- -D warnings
      
      - name: Run tests
        run: cargo test --quiet --locked --all-targets --all-features